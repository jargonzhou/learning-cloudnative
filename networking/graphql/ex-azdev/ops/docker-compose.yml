version: '3.8'

services:
  postgresql:
    image: postgres:16.2
    container_name: postgresql
    restart: "always"
    env_file:
      - .env
    ports:
      - 5432:5432
    volumes:
      - ./pg-data:/var/lib/postgresql/data
      # - ./postgresql.conf:/etc/postgresql/postgresql.conf
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 10s
      retries: 5
      start_period: 5s
    networks:
      - devops-network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: "always"
    env_file:
      - .env
    ports:
      - 5433:80
    volumes:
      - ./pgadmin:/var/lib/pgadmin
    networks:
      - devops-network
    depends_on:
      postgresql:
        condition: service_healthy

  mongo:
    container_name: mongo
    image: mongo:6.0.1
    restart: always
    env_file:
      - .env
    ports:
      - 27017:27017
    volumes:
      - ./mongo-data:/data/db
      - ./init.js:/docker-entrypoint-initdb.d/init.js
    networks:
      - devops-network

  mongo-express:
    container_name: mongo-express
    image: mongo-express:1.0.0-alpha.4
    restart: always
    env_file:
      - .env
    ports:
      - 18081:8081
    depends_on:
      - mongo
    networks:
      - devops-network

networks:
  devops-network:
    external: true
