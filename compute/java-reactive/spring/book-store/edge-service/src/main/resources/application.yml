spring:
  application:
    name: edge-service
  lifecycle:
    timeout-per-shutdown-phase: 15s
  devtools: # DEV_ENV
    restart:
      enabled: true
    livereload:
      enabled: true
      port: 35730
  cloud:
    gateway:
      httpclient:
        connect-timeout: 2000
        response-timeout: 5s
        pool:
          type: elastic
          max-idle-time: 15s
          max-life-time: 60s
      default-filters:
        - SaveSession # save session data
        - TokenRelay # token propagation
        - name: Retry
          args:
            retries: 3
            methods: GET
            series: SERVER_ERROR
            exceptions: java.io.IOException, java.util.concurrent.TimeoutException
            backoff:
              firstBackoff: 50ms
              maxBackoff: 500ms
              factor: 2
              basedOnPreviousValue: false
        - name: RequestRateLimiter
          args:
            redis-rate-limiter:
              replenishRate: 10
              burstCapacity: 20
              requestedTokens: 1
      routes:
        - id: catalog-route
          uri: ${CATALOG_SERVICE_URL:http://localhost:9001}/books
          predicates:
            - Path=/books/**
          filters:
            - name: CircuitBreaker
              args:
                - name: catalogCircuitBreaker
                  fallbackUri: forward:/catalog-fallback
        - id: order-route
          uri: ${ORDER_SERVICE_URL:http://localhost:9002}/orders
          predicates:
            - Path=/orders/**
          filters:
            - name: CircuitBreaker
              args:
                - name: orderCircuitBreaker
#        - id: spa-route
#          uri: ${SPA_URL:http://localhost:9004}
#          predicates:
#            - Path=/,/*.css,/*.js,/favicon.ico
  redis:
    host: localhost
    port: 6379
    connect-timeout: 2s
    timeout: 1s
  session:
    store-type: redis
    timeout: 10m
    redis:
      namespace: bookstore:edge
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: edge-service
            client-secret: bookstore-edge-service-secret
            scope: openid,roles
        provider:
          keycloak:
            issuer-uri: http://localhost:18080/realms/bookstore

resilience4j:
  circuitbreaker:
    configs:
      default:
        slidingWindowSize: 20
        permittedNumberOfCallsInHalfOpenState: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 15000
  timelimiter:
    configs:
      default:
        timeoutDuration: 5s

server:
  port: 9000
  netty:
    connection-timeout: 2s
    idle-timeout: 15s
  shutdown: graceful

logging:
  level:
    io.github.resilience4j: DEBUG

management:
  endpoints:
    mappings:
      enabled: true
    web:
      exposure:
        include: "*" # env,beans,health,mappings